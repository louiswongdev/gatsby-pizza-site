{"version":3,"sources":["webpack:///./src/styles/Grids.js","webpack:///./src/components/ItemGrid.js","webpack:///./src/components/LoadingGrid.js","webpack:///./src/utils/useLatestData.js","webpack:///./src/pages/index.js"],"names":["HomePageGrid","styled","div","ItemsGrid","ItemStyles","ItemGrid","items","map","item","key","_id","className","name","width","height","src","image","asset","url","alt","style","background","metadata","lqip","backgroundSize","LoadingGrid","count","Array","from","length","_","i","gql","String","raw","deets","CurrentlySlicing","slicemasters","HotSlices","hotSlices","HomePage","useState","setHotSlices","sliceMasters","setSliceMasters","useEffect","fetch","process","method","headers","body","JSON","stringify","query","then","res","json","data","StoreSettings","slicemaster","catch","err","console","log","useLatestData"],"mappings":"+KAEaA,EAAeC,IAAOC,IAAV,0EAAGD,CAAH,6EAMZE,EAAYF,IAAOC,IAAV,uEAAGD,CAAH,0DAMTG,EAAaH,IAAOC,IAAV,wEAAGD,CAAH,mdCXR,SAASI,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACjC,OACE,kBAACH,EAAD,KACGG,EAAMC,KAAI,SAACC,GAAD,OACT,kBAACJ,EAAD,CAAYK,IAAKD,EAAKE,KACpB,2BACE,0BAAMC,UAAU,QAAQH,EAAKI,OAE/B,yBACEC,MAAM,MACNC,OAAO,MACPC,IAAQP,EAAKQ,MAAMC,MAAMC,IAAtB,wBACHC,IAAI,YACJC,MAAO,CACLC,WAAW,OAAQb,EAAKQ,MAAMC,MAAMK,SAASC,KAAnC,IACVC,eAAgB,gB,UCff,SAASC,EAAT,GAAiC,IAAVC,EAAS,EAATA,MACpC,OACE,kBAACvB,EAAD,KACGwB,MAAMC,KAAK,CAAEC,OAAQH,IAAS,SAACI,EAAGC,GAAJ,OAC7B,kBAAC3B,EAAD,CAAYK,IAAKsB,GACf,2BACE,0BAAMpB,UAAU,QAAhB,eAEF,yBACEI,IAAI,0HACJJ,UAAU,UACVQ,IAAI,UACJN,MAAM,MACNC,OAAO,a,6VCdnB,IAAMkB,EAAMC,OAAOC,IAEbC,EAAK,qICIX,SAASC,EAAT,GAA6C,IAAjBC,EAAgB,EAAhBA,aAC1B,OACE,6BACE,wBAAI1B,UAAU,UACZ,0BAAMA,UAAU,aAAhB,oBAEF,kEACE0B,GAAgB,kBAACZ,EAAD,CAAaC,MAAO,IACrCW,KAAiBA,aAAD,EAACA,EAAcR,SAC9B,4DAEDQ,aAAA,EAAAA,EAAcR,SAAU,kBAACxB,EAAD,CAAUC,MAAO+B,KAKhD,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UACnB,OACE,6BACE,wBAAI5B,UAAU,UACZ,0BAAMA,UAAU,aAAhB,eAEF,kEACE4B,GAAa,kBAACd,EAAD,CAAaC,MAAO,IAClCa,KAAcA,aAAD,EAACA,EAAWV,SAAU,oDACnCU,aAAA,EAAAA,EAAWV,SAAU,kBAACxB,EAAD,CAAUC,MAAOiC,KAK9B,SAASC,IAAY,IAAD,EDrBpB,WAAyB,MAEJC,qBAA3BF,EAF+B,KAEpBG,EAFoB,OAIED,qBAAjCE,EAJ+B,KAIjBC,EAJiB,KAwCtC,OAlCAC,qBAAU,WACRC,MAAMC,+DAAqC,CACzCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOrB,EAAF,IAKKG,EAGAA,OAOXmB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAELb,EAAaa,EAAIE,KAAKC,cAAcnB,WACpCK,EAAgBW,EAAIE,KAAKC,cAAcC,gBAExCC,OAAM,SAACC,GACNC,QAAQC,IAAI,eACZD,QAAQC,IAAIF,QAEf,IAEI,CACLtB,YACAI,gBCpBkCqB,GAA5BrB,EADyB,EACzBA,aAAcJ,EADW,EACXA,UAEtB,OACE,yBAAK5B,UAAU,UACb,wDACA,2DACA,kBAACX,EAAD,KACE,kBAACoC,EAAD,CAAkBC,aAAcM,IAChC,kBAACL,EAAD,CAAWC,UAAWA","file":"component---src-pages-index-js-fd4fcbdaa58eef4eba1d.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HomePageGrid = styled.div`\n  display: grid;\n  gap: 20px;\n  grid-template-columns: repeat(2, minmax(auto, 1fr));\n`;\n\nexport const ItemsGrid = styled.div`\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const ItemStyles = styled.div`\n  text-align: center;\n  position: relative;\n  img {\n    height: auto;\n    font-size: 0; // remove any possible spacing issues with images\n  }\n  p {\n    transform: rotate(-2deg) translateY(-140%);\n    position: absolute;\n    width: 100%;\n    left: 0;\n  }\n  .mark {\n    display: inline;\n  }\n  @keyframes shine {\n    from {\n      background-position: 200%;\n    }\n    to {\n      background-position: -40px;\n    }\n  }\n  img.loading {\n    --shine: white;\n    --background: var(--grey);\n    background-image: linear-gradient(\n      90deg,\n      var(--background) 0px,\n      var(--shine) 40px,\n      var(--background) 80px\n    );\n    background-size: 500px;\n    animation: shine 1s infinite linear;\n  }\n`;\n","import React from 'react';\nimport { ItemsGrid, ItemStyles } from '../styles/Grids';\n\nexport default function ItemGrid({ items }) {\n  return (\n    <ItemsGrid>\n      {items.map((item) => (\n        <ItemStyles key={item._id}>\n          <p>\n            <span className=\"mark\">{item.name}</span>\n          </p>\n          <img\n            width=\"500\"\n            height=\"400\"\n            src={`${item.image.asset.url}?w=500&h=400&fit=crop`}\n            alt=\"item.name\"\n            style={{\n              background: `url(${item.image.asset.metadata.lqip})`,\n              backgroundSize: 'cover',\n            }}\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGrid>\n  );\n}\n","import React from 'react';\nimport { ItemsGrid, ItemStyles } from '../styles/Grids';\n\nexport default function LoadingGrid({ count }) {\n  return (\n    <ItemsGrid>\n      {Array.from({ length: count }, (_, i) => (\n        <ItemStyles key={i}>\n          <p>\n            <span className=\"mark\">Loading...</span>\n          </p>\n          <img\n            src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUAAAAECAQAAADsOj3LAAAADklEQVR42mNkgANGQkwAAJoABWH6GPAAAAAASUVORK5CYII=\"\n            className=\"loading\"\n            alt=\"Loading\"\n            width=\"500\"\n            height=\"400\"\n          />\n        </ItemStyles>\n      ))}\n    </ItemsGrid>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nconst gql = String.raw;\n\nconst deets = `\n  name\n  _id\n  image {\n    asset {\n      url\n      metadata {\n        lqip #low quality placeholder\n      }\n    }\n  }\n`;\n\nexport default function useLatestData() {\n  // hot slices\n  const [hotSlices, setHotSlices] = useState();\n  // slicemasters\n  const [sliceMasters, setSliceMasters] = useState();\n\n  useEffect(() => {\n    fetch(process.env.GATSBY_GRAPHQL_ENDPOINT, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: gql`\n          query {\n            StoreSettings(id: \"downtown\") {\n              name\n              slicemaster {\n                ${deets}\n              }\n              hotSlices {\n                ${deets}\n              }\n            }\n          }\n        `,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // TODO: check for errors\n        setHotSlices(res.data.StoreSettings.hotSlices);\n        setSliceMasters(res.data.StoreSettings.slicemaster);\n      })\n      .catch((err) => {\n        console.log('shoooot....');\n        console.log(err);\n      });\n  }, []);\n\n  return {\n    hotSlices,\n    sliceMasters,\n  };\n}\n","import React from 'react';\nimport ItemGrid from '../components/ItemGrid';\nimport Layout from '../components/Layout';\nimport LoadingGrid from '../components/LoadingGrid';\nimport Nav from '../components/Nav';\nimport { HomePageGrid } from '../styles/Grids';\nimport useLatestData from '../utils/useLatestData';\n\nfunction CurrentlySlicing({ slicemasters }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Slicemasters On</span>\n      </h2>\n      <p>Standing by, ready to slice you up</p>\n      {!slicemasters && <LoadingGrid count={4} />}\n      {slicemasters && !slicemasters?.length && (\n        <p>No one is working right now!</p>\n      )}\n      {slicemasters?.length && <ItemGrid items={slicemasters} />}\n    </div>\n  );\n}\n\nfunction HotSlices({ hotSlices }) {\n  return (\n    <div>\n      <h2 className=\"center\">\n        <span className=\"mark tilt\">Hot Slices</span>\n      </h2>\n      <p>Come on by, try our popular slices</p>\n      {!hotSlices && <LoadingGrid count={4} />}\n      {hotSlices && !hotSlices?.length && <p>Nothing in the case!</p>}\n      {hotSlices?.length && <ItemGrid items={hotSlices} />}\n    </div>\n  );\n}\n\nexport default function HomePage() {\n  const { sliceMasters, hotSlices } = useLatestData();\n\n  return (\n    <div className=\"center\">\n      <h1>The Best Pizza Downtown!</h1>\n      <p>Open 11am to 11pm Every Day.</p>\n      <HomePageGrid>\n        <CurrentlySlicing slicemasters={sliceMasters} />\n        <HotSlices hotSlices={hotSlices} />\n      </HomePageGrid>\n    </div>\n  );\n}\n"],"sourceRoot":""}